const buildRows = [
    { arguments: "-q, --quiet                     ", description: "Do not print cargo log messages" },
    { arguments: "-p, --package [<SPEC>]          ", description: "Package to build (see `cargo help pkgid`)" },
    { arguments: "--workspace                 ", description: "Build all packages in the workspace" },
    { arguments: "--exclude <SPEC>            ", description: "Exclude packages from the build" },
    { arguments: "-v, --verbose                   ", description: "Use verbose output (-vv very verbose/build.rs output)" },
    { arguments: "--all                       ", description: "Alias for --workspace (deprecated)" },
    { arguments: "--color <WHEN>              ", description: "Coloring: auto, always, never" },
    { arguments: "-j, --jobs <N>                  ", description: "Number of parallel jobs, defaults to # of CPUs" },
    { arguments: "--frozen                    ", description: "Require Cargo.lock and cache are up to date" },
    { arguments: "--keep-going                ", description: "Do not abort the build as soon as there is an error (unstable)" },
    { arguments: "--lib                       ", description: "Build only this package's library" },
    { arguments: "--locked                    ", description: "Require Cargo.lock is up to date" },
    { arguments: "--bin [<NAME>]              ", description: "Build only the specified binary" },
    { arguments: "--offline                   ", description: "Run without accessing the network" },
    { arguments: "--bins                      ", description: "Build all binaries" },
    { arguments: "--config <KEY=VALUE>        ", description: "Override a configuration value (unstable)" },
    { arguments: "--example [<NAME>]          ", description: "Build only the specified example" },
    { arguments: "-Z <FLAG>                       ", description: "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for" },
    { arguments: "--examples                  ", description: "Build all examples" },
    { arguments: "--test [<NAME>]             ", description: "Build only the specified test target" },
    { arguments: "--tests                     ", description: "Build all tests" },
    { arguments: "--bench [<NAME>]            ", description: "Build only the specified bench target" },
    { arguments: "--benches                   ", description: "Build all benches" },
    { arguments: "--all-targets               ", description: "Build all targets" },
    { arguments: "-r, --release                   ", description: "Build artifacts in release mode, with optimizations" },
    { arguments: "--profile <PROFILE-NAME>    ", description: "Build artifacts with the specified profile" },
    { arguments: "--features <FEATURES>       ", description: "Space or comma separated list of features to activate" },
    { arguments: "--all-features              ", description: "Activate all available features" },
    { arguments: "--no-default-features       ", description: "Do not activate the `default` feature" },
    { arguments: "--target <TRIPLE>           ", description: "Build for the target triple" },
    { arguments: "--target-dir <DIRECTORY>    ", description: "Directory for all generated artifacts" },
    { arguments: "--out-dir <PATH>            ", description: "Copy final artifacts to this directory (unstable)" },
    { arguments: "--manifest-path <PATH>      ", description: "Path to Cargo.toml" },
    { arguments: "--ignore-rust-version       ", description: "Ignore `rust-version` specification in packages" },
    { arguments: "--message-format <FMT>      ", description: "Error format" },
    { arguments: "--build-plan                ", description: "Output the build plan in JSON (unstable)" },
    { arguments: "--unit-graph                ", description: "Output build graph in JSON (unstable)" },
    { arguments: "--future-incompat-report    ", description: "Outputs a future incompatibility report at the end of the build" },
    { arguments: "--timings[=<FMTS>...]       ", description: "Timing output formats (unstable) (comma separated): html, json" },
    { arguments: "-h, --help                      ", description: "Print help information" },
]

export default buildRows